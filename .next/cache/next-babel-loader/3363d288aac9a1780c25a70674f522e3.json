{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/alexis/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/MyPlates/0.NextJs/ts-minin/pages/posts/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport MainLayout from '../../components/MainLayout';\n\nvar Posts = function Posts(_ref) {\n  _s();\n\n  var serverPosts = _ref.posts;\n\n  var _useState = useState(serverPosts),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    function load() {\n      return _load.apply(this, arguments);\n    }\n\n    function _load() {\n      _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('http://localhost:3001/posts');\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                body = _context.sent;\n                setPosts(body);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _load.apply(this, arguments);\n    }\n\n    if (!serverPosts) {\n      load();\n    }\n  }, []);\n\n  if (!posts) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading posts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    title: \"Posts page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(function (post) {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/post/\".concat(post.id),\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                background: 'pink',\n                padding: '5px',\n                marginBottom: '1px',\n                listStyleType: 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 9\n              }, _this)\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 8\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Link home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return Router.push('/');\n      },\n      children: \"Router go home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(Posts, \"Dga2/5+w8JXHREE3CchEiDoZgRc=\");\n\n_c = Posts;\n\nPosts.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var req, res, posts;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            req = _ref2.req;\n\n            if (req) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {\n              posts: null\n            });\n\n          case 3:\n            _context2.next = 5;\n            return fetch(\"\".concat(\"development\"));\n\n          case 5:\n            res = _context2.sent;\n            _context2.next = 8;\n            return res.json();\n\n          case 8:\n            posts = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              posts: posts\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/alexis/Рабочий стол/MyPlates/0.NextJs/ts-minin/pages/posts/index.tsx"],"names":["useState","useEffect","Link","Router","MainLayout","Posts","serverPosts","posts","setPosts","load","fetch","res","json","body","map","post","id","background","padding","marginBottom","listStyleType","title","push","getInitialProps","req"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\n\nimport Link from 'next/link'\nimport Router from 'next/router'\nimport MainLayout from '../../components/MainLayout'\nimport { MyPost } from '../../interfaces/post'\nimport { NextPageContext } from 'next'\n\ninterface PostsPageProps {\n\tposts: MyPost[]\n}\n\nconst Posts = ({ posts: serverPosts }: PostsPageProps) => {\n\tconst [posts, setPosts] = useState(serverPosts)\n\n\tuseEffect(() => {\n\t\tasync function load() {\n\t\t\tconst res = await fetch('http://localhost:3001/posts')\n\t\t\tconst body = await res.json()\n\t\t\tsetPosts(body)\n\t\t}\n\t\tif (!serverPosts) {\n\t\t\tload()\n\t\t}\n\t}, [])\n\n\tif (!posts) {\n\t\treturn (\n\t\t\t<MainLayout>\n\t\t\t\t<h1>Loading posts...</h1>\n\t\t\t</MainLayout>\n\t\t)\n\t}\n\n\treturn (\n\t\t<MainLayout title='Posts page'>\n\t\t\t<h1>Posts page</h1>\n\t\t\t<hr />\n\t\t\t<pre>\n\t\t\t\t<ul>\n\t\t\t\t\t{posts.map((post) => (\n\t\t\t\t\t\t<Link href={`/post/${post.id}`}>\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackground: 'pink',\n\t\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\t\tmarginBottom: '1px',\n\t\t\t\t\t\t\t\t\tlistStyleType: 'none',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span>{post.title}</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</pre>\n\t\t\t<hr />\n\t\t\t<Link href='/'>\n\t\t\t\t<a>Link home</a>\n\t\t\t</Link>\n\t\t\t<br />\n\t\t\t<button onClick={() => Router.push('/')}>Router go home</button>\n\t\t</MainLayout>\n\t)\n}\n\nPosts.getInitialProps = async ({ req }: NextPageContext) => {\n\tif (!req) {\n\t\treturn { posts: null }\n\t}\n\tconst res = await fetch(`${process.env.NODE_ENV}`)\n\tconst posts: MyPost[] = await res.json()\n\n\treturn { posts }\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}